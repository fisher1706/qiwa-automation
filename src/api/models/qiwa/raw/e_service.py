from typing import Literal, Optional

from src.api.models.qiwa.base import QiwaBaseModel

StateT = Literal[
    "active", "hidden", "disabled", "forbidden"
]  # TODO: review for each type literally


class Group(QiwaBaseModel):
    id: int
    category_id: int | None = ...
    title: str
    title_en: str
    title_ar: str
    description: str | None = ...
    description_en: str | None = ...
    description_ar: str | None = ...
    position: int | None = ...
    rules: str | None = ...
    rules_en: str | None = ...
    rules_ar: str | None = ...
    message: str | None = ...
    message_en: str | None = ...
    message_ar: str | None = ...
    image: str | None = ...
    state: StateT


class Link(QiwaBaseModel):
    link: str | None = ...
    name_ar: str | None = ...
    name_en: str | None = ...


class IncludedEService(QiwaBaseModel):
    id: int
    title_en: str
    title_ar: str


class EService(QiwaBaseModel):
    id: int
    service_code: str
    position: int | None = ...
    image: str | None = ...
    links: list[Link] | None = ...
    state: StateT
    shareable_service: bool
    title: str
    title_en: str
    title_ar: str
    description: str | None = ...
    description_en: str | None = ...
    description_ar: str | None = ...
    rules_en: str | None = ...
    rules_ar: str | None = ...
    message: str | None = ...
    message_en: str | None = ...
    message_ar: str | None = ...
    rules: str | None = ...
    type: Literal["service"]


class EServiceSuper(QiwaBaseModel):
    id: int
    service_code: str
    position: int | None = ...
    image: str | None = ...
    links: list[Link] | None = ...
    state: StateT
    shareable_service: bool
    title_en: str
    title_ar: str
    description_en: str | None = ...
    description_ar: str | None = ...
    rules_en: str | None = ...
    rules_ar: str | None = ...
    message_en: str | None = ...
    message_ar: str | None = ...
    category_id: int
    permission_code: str | None = ...
    needs_permission: bool


class GroupSuper(QiwaBaseModel):
    id: int
    category_id: int | None = ...
    title_en: str
    title_ar: str
    description_en: str
    description_ar: str
    position: int | None = ...
    rules_en: str
    rules_ar: str
    message_en: str
    message_ar: str
    image: str
    state: StateT
    links: Link | None = ...


class ServiceGroup(QiwaBaseModel):
    id: int
    title: str
    title_en: str
    title_ar: str
    description: str | None = ...
    description_en: str | None = ...
    description_ar: str | None = ...
    position: int | None = ...
    rules: str | None = ...
    rules_en: str | None = ...
    rules_ar: str | None = ...
    message: str | None = ...
    message_en: str | None = ...
    message_ar: str | None = ...
    image: str | None = ...
    state: StateT
    type: Literal["group", "service"]
    links: Optional[list[Link]]
    service_code: Optional[str]
    shareable_service: Optional[bool]


class Tag(QiwaBaseModel):
    id: int
    code: str
    name: str
    name_en: str
    name_ar: str


class TagSuper(QiwaBaseModel):
    id: int
    code: str
    name_en: str
    name_ar: str


class Meta(QiwaBaseModel):
    total: int


class MetaSuper(QiwaBaseModel):
    total: int
    pages_count: int
    current_page: int
