include:
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.package-docker-image.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.sonarqube-check.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.allure-report.yml'

variables:
  ALLURE_RESULTS_DIRECTORY: allure-results
  XML_REPORT: report.xml
  TESTMO_URL: https://qiwa.testmo.net

default:
  image: registry.gitlab.qiwa.tech/takamol/qiwa/integration-testing/qiwa-automation/master

stages:
  - build
  - linting
  - test-run
  - testmo-report
  - allure-report
  - discord-notification
  - allure-send-email

.package:
  image: $CI_REGISTRY/takamol/qiwa/infrastructure/ci-cd/package:latest
  services:
    - name: docker:dind
  script:
    - cp /src/.dockerignore .
    - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "ENV_LATEST $ENV_LATEST"
    - echo "Pulling image with `latest` tag...";
    - time docker pull $ENV_LATEST || true
    - echo "Building image...";
    - time docker build --cache-from $ENV_LATEST -t $ENV_LATEST -t $VERSION_TAGGED .
    - echo "Attempting to push image to GitLab registry...";
    - time docker push $ENV_LATEST
    - time docker push $VERSION_TAGGED

build:
  stage: build
  extends: .package
  variables:
    ENV: master
  tags:
    - dind
  only:
    refs:
      - web
      - merge_requests
    changes:
      - Dockerfile
      - pyproject.toml

build_test_allure:
  stage: build
  extends: .package
  tags:
    - dind
  only:
    - add_allure_cleaner

.linting_template: &lint
  stage: linting
  only:
    - merge_requests

pytest:
  <<: *lint
  script:
    - export ENV=stage
    - pytest --collect-only -qq
    - export ENV=demo
    - pytest --collect-only -qq

pylint:
  <<: *lint
  script:
    - echo CI_COMMIT_SHA=${CI_COMMIT_SHA}
    - echo CI_MERGE_REQUEST_TARGET_BRANCH_NAME=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
    - git fetch origin ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
    - tmp_files=$(git diff --name-only --diff-filter=d ${CI_COMMIT_SHA} origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME})
    - echo "Changed files are \n$tmp_files"
    - if [ -z "$(echo "$tmp_files" | grep "\.py")" ]; then exit 0; else echo "Python files are found"; fi
    - tmp_pfiles=$(echo "$tmp_files" | grep "\.py")
    - echo "Python files are \n$tmp_pfiles"
    - pylint --exit-zero --output-format=text $tmp_pfiles

black:
  <<: *lint
  script:
    - black . --check --diff --color

isort:
  <<: *lint
  script:
    - isort . --check --diff

.testrun_template: &testrun
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  allow_failure:
    exit_codes: 1
  stage: test-run
  timeout: 150 minutes
  tags:
    - shared
  script:
    - echo $TEST_SUITE
    - pytest $TEST_SUITE $OPTIONS -s --alluredir=$ALLURE_RESULTS_DIRECTORY --junitxml=$XML_REPORT -o junit_suite_name=$SUITE_NAME || EXIT_CODE=$?
    - exit $EXIT_CODE
  variables:
    SUITE_NAME: $TEST_SUITE
  artifacts:
    paths:
      - $XML_REPORT
      - $ALLURE_RESULTS_DIRECTORY
    expire_in: 1 day
    when: always

sso_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/sso

um_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/user_management
  needs:
    - job: sso_ui_tests
      artifacts: false

dedicated_co_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dedicated/change_occupation

dedicated_et_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dedicated/employee_transfer

dedicated_el_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dedicated/employee_list

delegation_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/delegation

visa_ui_tests:
  <<: *testrun
  variables:
    ENV: demo
    TEST_SUITE: tests/ui/visa
  needs:
    - job: dedicated_co_ui_tests
      artifacts: false

dataportal_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dataportal

lmi_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/lmi
  needs:
    - job: dataportal_ui_tests
      artifacts: false
    - job: lmi_api_tests
      artifacts: false

sso_api_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/sso

um_api_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/user_management

shareable_api_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/shareable
    SUITE_NAME: API

lmi_api_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/lmi

lo_api_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/lo

lo_ui_tests:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/lo

.testmo_report_template: &testmo_report
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: testmo-report
  script:
    - echo $TESTMO_PROJECT_ID
    - echo $ALLURE_PROJECT_ID
    - testmo automation:resources:add-link
      --name "Allure report"
      --url "https://allure.qiwa.tech/allure-docker-service-ui/projects/$ALLURE_PROJECT_ID"
      --note "Allure contains more advanced reports of the test runs"
    - testmo automation:resources:add-link
      --name "GitLab CI/CD pipeline"
      --url "https://gitlab.qiwa.tech/takamol/qiwa/integration-testing/qiwa-automation/-/jobs/$CI_JOB_ID"
      --note "Link to GitLab's CI/CD job logs"
    - testmo automation:run:submit
      --instance $TESTMO_URL
      --project-id $TESTMO_PROJECT_ID
      --name "Pytest test run"
      --source "CI-CD"
      --results $XML_REPORT
      --debug
      --resources testmo-resources.json

sso_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 23
    ALLURE_PROJECT_ID: aqa-sso-ui
  needs: [sso_ui_tests]

um_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 26
    ALLURE_PROJECT_ID: aqa-um-ui
  needs: [um_ui_tests]

dedicated_co_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 3
    ALLURE_PROJECT_ID: aqa-co-ui
  needs: [dedicated_co_ui_tests]

dedicated_et_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 10
    ALLURE_PROJECT_ID: aqa-et-ui
  needs: [dedicated_et_ui_tests]

dedicated_el_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 11
    ALLURE_PROJECT_ID: aqa-el-ui
  needs: [dedicated_el_ui_tests]

visa_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 7
    ALLURE_PROJECT_ID: aqa-visa-ui
  needs: [visa_ui_tests]

dataportal_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: aqa-dataportal-ui
  needs: [dataportal_ui_tests]

lmi_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: aqa-lmi-ui
  needs: [lmi_ui_tests]

sso_api_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 23
    ALLURE_PROJECT_ID: aqa-sso-api
  needs: [sso_api_tests]

um_api_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 26
    ALLURE_PROJECT_ID: aqa-um-api
  needs: [um_api_tests]

lmi_api_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: aqa-lmi-api
  needs: [lmi_api_tests]

lo_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 16
    ALLURE_PROJECT_ID: aqa-lo-ui
  needs: [lo_ui_tests]

lo_api_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 16
    ALLURE_PROJECT_ID: aqa-lo-api
  needs: [lo_api_tests]

delegation_ui_testmo_report:
  <<: *testmo_report
  variables:
    TESTMO_PROJECT_ID: 9
    ALLURE_PROJECT_ID: aqa-delegation
  needs: [delegation_ui_tests]

.allure_report_template: &allure_report
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  extends: .generate_allure_report
  stage: allure-report

sso_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-sso-ui
  needs: [sso_ui_tests]

um_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-um-ui
  needs: [um_ui_tests]

dedicated_co_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-co-ui
  needs: [dedicated_co_ui_tests]

dedicated_et_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-et-ui
  needs: [dedicated_et_ui_tests]

dedicated_el_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-el-ui
  needs: [dedicated_el_ui_tests]

dataportal_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-dataportal-ui
  needs: [dataportal_ui_tests]

delegation_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-delegation
  needs: [delegation_ui_tests]

lmi_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-lmi-ui
  needs: [lmi_ui_tests]

sso_api_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-sso-api
  needs: [sso_api_tests]

um_api_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-um-api
  needs: [um_api_tests]

shareable_api_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-ss-api-stage
  needs: [shareable_api_tests]

lmi_api_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-lmi-api
  needs: [lmi_api_tests]

lo_api_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-lo-api
  needs: [lo_api_tests]

lo_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-lo-ui
  needs: [lo_ui_tests]

visa_ui_allure_report:
  <<: *allure_report
  variables:
    ALLURE_PROJECT_ID: aqa-visa-ui
  needs: [visa_ui_tests]

.allure_email_template: &allure_send_email
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  extends: .generate_allure_report
  stage: allure-send-email
  script:
    - "curl --http1.1 -sS -f -o allure-email-report-${ALLURE_PROJECT_ID}.html -X GET $ALLURE_URL/allure-docker-service/emailable-report/render?project_id=${ALLURE_PROJECT_ID}"
    - python3 utils/email_sender.py $address $password allure-email-report-${ALLURE_PROJECT_ID}.html $SERVICE_NAME $XML_REPORT $RECIPIENTS

dedicated_et_ui_allure_send_email:
  <<: *allure_send_email
  variables:
    ALLURE_PROJECT_ID: aqa-et-ui
    RECIPIENTS: M.Ozman@takamol.com.sa, A.Muhammad-c@takamol.com.sa, yurii.zosin@cd.p2h.com, olena.kazanets@cd.p2h.com, dmytro.popovskyi@p2h.com
    SERVICE_NAME: Employee_Transfer
  needs: [dedicated_et_ui_tests, dedicated_et_ui_allure_report]

.discord_notification_template: &discord_notification
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: discord-notification
  script:
    - python utils/discord_notify.py $XML_REPORT $WEBHOOK

um_ui_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $UM_UI_DAILY
  needs: [um_ui_tests]

delegation_ui_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $DELEGATION_UI_WEBHOOK
  needs: [delegation_ui_tests]

um_api_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $UM_API_DAILY
  needs: [um_api_tests]

shareable_api_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $SHAREABLE_AUTOTEST_RESULTS
  needs: [shareable_api_tests]

visa_ui_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $VISA_UI_DAILY
  needs: [visa_ui_tests]

lo_ui_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $LO_UI_DAILY
  needs: [lo_ui_tests]

lo_api_discord_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $LO_API_DAILY
  needs: [lo_api_tests]
