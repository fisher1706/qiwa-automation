include:
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.package-docker-image.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.sonarqube-check.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.allure-report.yml'

variables:
  IMAGE: takamol/qa-automation:master-latest
  ALLURE_DIRECTORY: allure-results

stages:
  - build
  - linting
  - tests
  - send-test-reports

.package:
  image: takamol/ci-cd:package-latest
  services:
    - name: docker:dind
  script:
    - echo $TAKAMOL_REGISTRY_PASSWORD | docker login -u $TAKAMOL_REGISTRY_USERNAME --password-stdin
    - docker pull $ENV_LATEST || true
    - docker build --cache-from $ENV_LATEST --build-arg CI_JOB_TOKEN=${CI_JOB_TOKEN} --build-arg CI_SERVER_HOST=${CI_SERVER_HOST} -t $ENV_LATEST -t $VERSION_TAGGED .
    - docker push $ENV_LATEST
    - docker push $VERSION_TAGGED
    - echo "Image name $VERSION_TAGGED"

build:
  stage: build
  extends: .package
  variables:
    ENV: master
  tags:
    - dind
  only:
    refs:
      - web
      - merge_requests
    changes:
      - Dockerfile
      - pyproject.toml

build_test_allure:
  stage: build
  extends: .package
  tags:
    - dind
  only:
    - add_allure_cleaner

pylint:
  image: $IMAGE
  stage: linting
  tags:
    - shared
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
    - if [ $(cat public/badges/$CI_JOB_NAME.score) != 10.00 ]; then exit 1; fi
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always
  only:
      - merge_requests

black:
  image: $IMAGE
  stage: linting
  script:
    - black . --check --diff --color
  only:
    - merge_requests

isort:
  image: $IMAGE
  stage: linting
  script:
    - isort . --check --diff
  only:
    - merge_requests

.testrun_template: &testrun
  image: $IMAGE
  allow_failure: true
  stage: tests
  tags:
    - shared
  artifacts:
    paths:
      - $ALLURE_DIRECTORY
    expire_in: 1 day
    when: always
  only:
    - master

ui_tests_sso:
  <<: *testrun
  script:
    - pytest tests/ui/sso -s --alluredir=$ALLURE_DIRECTORY
  retry:
    max: 2
    when: always

ui_tests_um:
  <<: *testrun
  script:
    - pytest tests/ui/um -s --alluredir=$ALLURE_DIRECTORY --discord_channel=um-ui-daily
  variables:
    ENV: stage

ui_tests_shareable:
  <<: *testrun
  script:
    - pytest tests/ui/shareable -s --alluredir=$ALLURE_DIRECTORY --reruns 2 --discord_channel=ss-ui-wp-daily

ui_tests_dedicated:
  <<: *testrun
  script:
    - pytest tests/ui/dedicated -s --alluredir=$ALLURE_DIRECTORY
  variables:
    ENV: demo

api_tests_sso:
  <<: *testrun
  script:
    - pytest tests/api/sso -s --alluredir=$ALLURE_DIRECTORY --reruns 2

api_tests_um:
  <<: *testrun
  script:
    - pytest tests/api/um -s --alluredir=$ALLURE_DIRECTORY --discord_channel=um-api-daily
  variables:
    ENV: stage

api_tests_shareable_demo:
  <<: *testrun
  script:
    - pytest tests/api/shareable -s --alluredir=$ALLURE_DIRECTORY --discord_channel=ss-api-wp-daily

api_tests_shareable_stage:
  <<: *testrun
  script:
     - pytest tests/api/shareable -m stage -s --alluredir=$ALLURE_DIRECTORY --discord_channel=ss-api-wp-daily
  variables:
    ENV: stage

.allure_results_template: &test_results
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  extends: .generate_allure_report
  stage: send-test-reports

allure-ui-sso-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: v1-sso-ui-daily
  dependencies:
    - ui_tests_sso

allure-ui-um-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: um-ui-daily
  dependencies:
    - ui_tests_um

allure-ss-ui-wp-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-ui-wp-daily
  dependencies:
    - ui_tests_shareable

allure-ui-et-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: et-ui-daily
  dependencies:
    - ui_tests_dedicated

allure-api-sso-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: v1-sso-api-daily
  dependencies:
    - api_tests_sso

allure-api-um-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: um-api-daily
  dependencies:
    - api_tests_um

allure-api-wp-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-api-wp-daily
  dependencies:
    - api_tests_shareable_demo

allure-api-ss-stage-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-api-stage
  dependencies:
    - api_tests_shareable_stage
