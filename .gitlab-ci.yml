include:
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.package-docker-image.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.sonarqube-check.yml'
  - project: 'takamol/qiwa/infrastructure/ci-cd'
    file: '/common-jobs/.allure-report.yml'

variables:
  IMAGE: takamol/qiwa-automation:master-latest
  ALLURE_RESULTS_DIRECTORY: allure-results
  XML_REPORT: report.xml
  TESTMO_URL: https://qiwa.testmo.net


stages:
  - build
  - linting
  - tests
  - send-test-reports
  - notification

.package:
  image: $CI_REGISTRY/takamol/qiwa/infrastructure/ci-cd/package:latest
  services:
    - name: docker:dind
  script:
    - echo $TAKAMOL_REGISTRY_PASSWORD | docker login -u $TAKAMOL_REGISTRY_USERNAME --password-stdin
    - docker pull $ENV_LATEST || true
    - docker build --cache-from $ENV_LATEST --build-arg CI_JOB_TOKEN=${CI_JOB_TOKEN} --build-arg CI_SERVER_HOST=${CI_SERVER_HOST} -t $ENV_LATEST -t $VERSION_TAGGED .
    - docker push $ENV_LATEST
    - docker push $VERSION_TAGGED
    - echo "Image name $VERSION_TAGGED"

build:
  stage: build
  extends: .package
  variables:
    ENV: master
  tags:
    - dind
  only:
    refs:
      - web
      - merge_requests
    changes:
      - Dockerfile
      - pyproject.toml

build_test_allure:
  stage: build
  extends: .package
  tags:
    - dind
  only:
    - add_allure_cleaner

pylint:
  image: $IMAGE
  stage: linting
  tags:
    - shared
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
    - if [ $(cat public/badges/$CI_JOB_NAME.score) != 10.00 ]; then exit 1; fi
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always
  only:
      - merge_requests

black:
  image: $IMAGE
  stage: linting
  script:
    - black . --check --diff --color
  only:
    - merge_requests

isort:
  image: $IMAGE
  stage: linting
  script:
    - isort . --check --diff
  only:
    - merge_requests

.testrun_template: &testrun
  image: $IMAGE
  allow_failure:
    exit_codes: 1
  stage: tests
  timeout: 150 minutes
  tags:
    - shared
  script:
    - echo $TEST_SUITE
    - echo $TESTMO_URL
    - echo $TESTMO_PROJECT_ID
    - echo $ALLURE_PROJECT_ID
    - testmo automation:resources:add-link --name "Allure report" --url "https://allure.qiwa.tech/allure-docker-service-ui/projects/$ALLURE_PROJECT_ID" --note "Allure contains more advanced reports of the test runs"
    - testmo automation:resources:add-link --name "GitLab CICD pipeline" --url "https://gitlab.qiwa.tech/takamol/qiwa/integration-testing/qiwa-automation/-/jobs/$CI_JOB_ID" --note "Link to Gitlab's CICD job logs"
    - testmo automation:run:submit 
      --instance "$TESTMO_URL"
      --project-id $TESTMO_PROJECT_ID
      --name "Pytest test run"
      --source "CICD"
      --results results/*.xml
      --debug
      --resources testmo-resources.json
      -- pytest $TEST_SUITE $OPTIONS -s --alluredir=$ALLURE_RESULTS_DIRECTORY --junitxml=$XML_REPORT --reruns 2 -o junit_suite_name=$TEST_SUITE || EXIT_CODE=$?
    - exit $EXIT_CODE
  artifacts:
    paths:
      - $XML_REPORT
      - $ALLURE_RESULTS_DIRECTORY
    expire_in: 1 day
    when: always
  only:
    - master

ui_tests_sso:
  <<: *testrun
  variables:
    ENV: demo
    TEST_SUITE: tests/ui/sso
    TESTMO_PROJECT_ID: 23
    ALLURE_PROJECT_ID: sso-ui-daily

ui_tests_um:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/um
    TESTMO_PROJECT_ID: 26
    ALLURE_PROJECT_ID: um-ui-daily

ui_tests_shareable:
  <<: *testrun
  variables:
    ENV: demo
    TEST_SUITE: tests/ui/shareable
    TESTMO_PROJECT_ID: None
    ALLURE_PROJECT_ID: None

ui_tests_dedicated_co:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dedicated/change_occupation
    TESTMO_PROJECT_ID: 3
    ALLURE_PROJECT_ID: co-ui-daily

ui_tests_visa:
  <<: *testrun
  variables:
    ENV: demo
    TEST_SUITE: tests/ui/visa
    TESTMO_PROJECT_ID: 7
    ALLURE_PROJECT_ID: visa-ui-tests

ui_tests_dataportal:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/dataportal
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: dataportal-ui-daily

ui_tests_lmi:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/ui/lmi
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: lmi-ui-daily

api_tests_sso:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/sso
    TESTMO_PROJECT_ID: 23
    ALLURE_PROJECT_ID: sso-api-daily

api_tests_um:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/um
    TESTMO_PROJECT_ID: 26
    ALLURE_PROJECT_ID: um-api-daily

api_tests_shareable_demo:
  <<: *testrun
  variables:
    ENV: demo
    TEST_SUITE: tests/api/shareable
    TESTMO_PROJECT_ID: None
    ALLURE_PROJECT_ID: None

api_tests_shareable_stage:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/shareable
    OPTIONS: "-m stage"
    TESTMO_PROJECT_ID: None
    ALLURE_PROJECT_ID: None

api_tests_lmi:
  <<: *testrun
  variables:
    ENV: stage
    TEST_SUITE: tests/api/lmi
    TESTMO_PROJECT_ID: 15
    ALLURE_PROJECT_ID: lmi-api-daily

.allure_results_template: &test_results
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  extends: .generate_allure_report
  stage: send-test-reports

allure-ui-sso-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: v1-sso-ui-daily
  needs: [ui_tests_sso]

allure-ui-um-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: um-ui-daily
  needs: [ui_tests_um]

allure-ss-ui-wp-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-ui-wp-daily
  needs: [ui_tests_shareable]

allure-ui-co-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: co-ui-daily
  needs: [ui_tests_dedicated_co]

allure-ui-dataportal-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: dataportal-ui-daily
  needs: [ui_tests_dataportal]

allure-ui-lmi-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: lmi-ui-daily
  needs: [ui_tests_lmi]

allure-api-sso-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: v1-sso-api-daily
  needs: [api_tests_sso]

allure-api-um-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: um-api-daily
  needs: [api_tests_um]

allure-api-wp-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-api-wp-daily
  needs: [api_tests_shareable_demo]

allure-api-ss-stage-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: ss-api-stage
  needs: [api_tests_shareable_stage]

allure-api-lmi-results:
  <<: *test_results
  variables:
    ALLURE_PROJECT_ID: lmi-api-daily
  needs: [api_tests_lmi]

.discord_notification_template: &discord_notification
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: notification
  image: $IMAGE
  script:
    - python utils/discord_notify.py $XML_REPORT $WEBHOOK

discord_um_ui_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $UM_UI_DAILY
  needs: [ui_tests_um]

discord_ss_ui_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $SS_UI_WP_DAILY
  needs: [ui_tests_shareable]

discord_um_api_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $UM_API_DAILY
  needs: [api_tests_um]

discord_ss_api_demo_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $SS_API_WP_DAILY
  needs: [api_tests_shareable_demo]

discord_ss_api_stage_notification:
  <<: *discord_notification
  variables:
    WEBHOOK: $SS_API_WP_DAILY
  needs: [api_tests_shareable_stage]